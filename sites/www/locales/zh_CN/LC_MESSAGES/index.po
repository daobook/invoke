# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Jeff Forcier
# This file is distributed under the same license as the Invoke package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Invoke \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-28 10:29+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../index.rst:91
msgid "FAQs"
msgstr "常见问题"

#: ../../index.rst:2
msgid "Welcome to Invoke!"
msgstr "欢迎来到 Invike！"

#: ../../index.rst:4
msgid ""
"This website covers project information for Invoke such as the changelog,"
" contribution guidelines, development roadmap, news/blog, and so forth. "
"Detailed usage and API documentation can be found at our code "
"documentation site, `docs.pyinvoke.org <http://docs.pyinvoke.org>`_. "
"Additionally, the project maintainer keeps a `roadmap "
"<http://bitprophet.org/projects#roadmap>`_ on his website."
msgstr ""
"网站涵盖了 Invoke 的项目信息，如更新日志、贡献指南、发展路线图、新闻/博客等等。"
"详细的用法和 API 文档可以在我们的代码文档网站上找到，`docs.pyinvoke.org <https://daobook.github.io/invoke>`_。"
"另外，项目维护者在他的网站上保留了一个`路线图<http://bitprophet.org/projects#roadmap>`_。"

#: ../../index.rst:11
msgid ""
"Please see below for a high level intro, or the navigation on the left "
"for the rest of the site content."
msgstr ""

#: ../../index.rst:15
msgid "What is Invoke?"
msgstr ""

#: ../../index.rst:17
msgid ""
"Invoke is a Python (2.7 and 3.4+) task execution tool & library, drawing "
"inspiration from various sources to arrive at a powerful & clean feature "
"set."
msgstr ""

#: ../../index.rst:20
msgid ""
"Like Ruby's Rake tool and Invoke's own predecessor Fabric 1.x, it "
"provides a clean, high level API for running shell commands and "
"defining/organizing task functions from a ``tasks.py`` file:"
msgstr ""

#: ../../index.rst:46
msgid ""
"From GNU Make, it inherits an emphasis on minimal boilerplate for common "
"patterns and the ability to run multiple tasks in a single invocation::"
msgstr ""

#: ../../index.rst:51
msgid ""
"Where Fabric 1.x considered the command-line approach the default mode of"
" use, Invoke (and tools built on it) are equally at home embedded in your"
" own Python code or a REPL:"
msgstr ""

#: ../../index.rst:79
msgid ""
"Following the lead of most Unix CLI applications, it offers a traditional"
" flag-based style of command-line parsing, deriving flag names and value "
"types from task signatures (optionally, of course!)::"
msgstr ""

#: ../../index.rst:87
msgid ""
"Like many of its predecessors, it offers advanced features as well -- "
"namespacing, task aliasing, before/after hooks, parallel execution and "
"more."
msgstr ""

