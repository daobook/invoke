# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Jeff Forcier
# This file is distributed under the same license as the Invoke package.
# xinetzone <735613050@qq.com>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Invoke \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-26 09:25+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: xinetzone <735613050@qq.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../index.rst:85
msgid "FAQs"
msgstr "常见问题"

#: ../../../../README.rst:1
msgid "|version| |python| |license| |ci| |coverage|"
msgstr ""

#: ../../../../README.rst:3
msgid "PyPI - Package Version"
msgstr ""

#: ../../../../README.rst:6
msgid "PyPI - Python Version"
msgstr ""

#: ../../../../README.rst:9
msgid "PyPI - License"
msgstr ""

#: ../../../../README.rst:12
msgid "CircleCI"
msgstr ""

#: ../../../../README.rst:15
msgid "Codecov"
msgstr ""

#: ../../../../README.rst:20
msgid "Welcome to Invoke!"
msgstr "欢迎来到 Invoke！"

#: ../../../../README.rst:22
msgid ""
"Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented "
"subprocesses and organizing executable Python code into CLI-invokable "
"tasks. It draws inspiration from various sources (``make``/``rake``, "
"Fabric 1.x, etc) to arrive at a powerful & clean feature set."
msgstr ""
"Invoke 是 Python（2.7 和 3.4+ 版本）库，用于管理面向 shell 的子进程，"
"并将可执行的 Python 代码组织成可通过命令行调用（CLI）的任务。"
"它从多种工具（如 ``make``/``rake``、Fabric 1.x 等）中汲取灵感，提供了一套强大且简洁的功能集。"

#: ../../../../README.rst:27
msgid ""
"To find out what's new in this version of Invoke, please see `the "
"changelog <https://pyinvoke.org/changelog.html#{}>`_."
msgstr ""
"要了解此版本 Invoke 的新特性，请参阅 `更新日志 <https://pyinvoke.org/changelog.html#{}>`_。"

#: ../../../../README.rst:30
msgid ""
"The project maintainer keeps a `roadmap "
"<https://bitprophet.org/projects#roadmap>`_ on his website."
msgstr ""
"项目维护者在其网站上保留了一份 `路线图 <https://bitprophet.org/projects#roadmap>`_。"

#: ../../index.rst:3
msgid ""
"This website covers project information for Invoke such as the changelog,"
" contribution guidelines, development roadmap, news/blog, and so forth. "
"Detailed usage and API documentation can be found at our code "
"documentation site, `docs.pyinvoke.org <https://docs.pyinvoke.org>`_."
msgstr ""
"这个网站涵盖了 Invoke 的项目信息，例如变更日志、贡献指南、开发路线图、新闻/博客等。"
"详细的使用方法和 API 文档可以在代码文档站点找到，`docs.pyinvoke.org <https://docs.pyinvoke.org>`_。"

#: ../../index.rst:8
msgid ""
"Please see below for a high level intro, or the navigation on the left "
"for the rest of the site content."
msgstr "请看下面的高层次介绍，或通过左边的导航了解网站的其他内容。"

#: ../../index.rst:12
msgid "What is Invoke?"
msgstr "什么是 Invoke？"

#: ../../index.rst:14
msgid ""
"Like Ruby's Rake tool and Invoke's own predecessor Fabric 1.x, it "
"provides a clean, high level API for running shell commands and "
"defining/organizing task functions from a ``tasks.py`` file:"
msgstr ""
"就像 Ruby 的 Rake 工具和 Invoke 自己的前身 Fabric 1.x 一样，它为运行 shell 命令和定义/组织来自 "
"``tasks.py`` 文件的任务函数提供了一个干净的、高水平的 API："

#: ../../index.rst:40
msgid ""
"From GNU Make, it inherits an emphasis on minimal boilerplate for common "
"patterns and the ability to run multiple tasks in a single invocation::"
msgstr ""
"从 GNU Make 继承了对常见模式的最小样板和能够在单个调用中运行多个任务的能力::"

#: ../../index.rst:45
msgid ""
"Where Fabric 1.x considered the command-line approach the default mode of"
" use, Invoke (and tools built on it) are equally at home embedded in your"
" own Python code or a REPL:"
msgstr ""
"Fabric 1.x 认为命令行方法是默认的使用模式，而 Invoke（以及建立在它之上的工具）同样可以嵌入你自己的 Python 代码或 "
"REPL 中："

#: ../../index.rst:73
msgid ""
"Following the lead of most Unix CLI applications, it offers a traditional"
" flag-based style of command-line parsing, deriving flag names and value "
"types from task signatures (optionally, of course!)::"
msgstr "跟随大多数 Unix CLI 应用程序的步伐，它提供了一种传统的基于标志的命令行解析风格，从任务签名中推导出标志名称和值类型（当然是可选的！） ::"

#: ../../index.rst:81
msgid ""
"Like many of its predecessors, it offers advanced features as well -- "
"namespacing, task aliasing, before/after hooks, parallel execution and "
"more."
msgstr "像它的许多前辈一样，它也提供了先进的功能--命名空间、任务别名、前后钩、并行执行等等。"

